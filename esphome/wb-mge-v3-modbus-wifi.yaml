substitutions:
  name: "wb-mge-v3"
  prefix: "esphome/${name}"
  i2c_sda_pin: GPIO32
  i2c_scl_pin: GPIO33
  vdet1_pin: GPIO34

  uart1_tx_pin: GPIO10
  uart1_rx_pin: GPIO9
  uart1_rts_pin: GPIO4

  uart2_tx_pin: GPIO14
  uart2_rx_pin: GPIO12
  uart2_rts_pin: GPIO15

  tca9555_address: "0x20"
  tca_pin_rs485_1_terminator: "0"
  tca_pin_rs485_2_terminator: "1"
  tca_pin_rs485_1_stretch: "2"
  tca_pin_rs485_2_stretch: "3"
  tca_pin_wifi_led: "4"
  tca_pin_eth_led: "5"
  tca_pin_vout: "6"
  tca_pin_status_led: "7"
  tca_pin_mio_on: "10"

esphome:
  name: ${name}
  friendly_name: ${name}

esp32:
  board: esp32dev
  framework:
    type: esp-idf

logger:
  level: INFO

api:
  encryption:
    key: "ug4sAVYxdcgPAUF9BZxxsGEKt472WEMCetB6QM4xPCs="

ota:
  - platform: esphome
    password: "46ccce888dd8474eb12553118c21fbf0"

#
# Wi-Fi
#

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ap:
    ssid: "${name} Fallback Hotspot"
    password: "5ceF9CZrErQb"

captive_portal:

##
## TCA9555
##

i2c:
  sda: ${i2c_sda_pin}
  scl: ${i2c_scl_pin}
  scan: true
  id: bus_a

tca9555:
  - id: tca9555_hub
    address: ${tca9555_address}
    i2c_id: bus_a

##
## MQTT
##

mqtt:
  broker: !secret mqtt_broker
  username: !secret mqtt_username
  password: !secret mqtt_password
  topic_prefix: "${prefix}"
  birth_message:
    topic: "${prefix}/text_sensor/status/state"
    payload: "online"
  will_message:
    topic: "${prefix}/text_sensor/status/state"
    payload: "offline"
  shutdown_message:
    topic: "${prefix}/text_sensor/status/state"
    payload: "shutdown"

##
## LEDS
##

output:
  - platform: gpio
    id: out_status_led
    pin:
      tca9555: tca9555_hub
      number: ${tca_pin_status_led}
      inverted: true

  - platform: gpio
    id: out_wifi_led
    pin:
      tca9555: tca9555_hub
      number: ${tca_pin_wifi_led}
      inverted: true

  - platform: gpio
    id: out_eth_led
    pin:
      tca9555: tca9555_hub
      number: ${tca_pin_eth_led}
      inverted: true

globals:
  - id: led_state
    type: bool
    restore_value: no
    initial_value: 'false'

interval:
  - interval: 1s
    then:
      - lambda: |-
          id(led_state) = !id(led_state);
          if (id(led_state)) {
            id(out_status_led).turn_on();
            id(out_wifi_led).turn_on();
            id(out_eth_led).turn_on();
          } else {
            id(out_status_led).turn_off();
            id(out_wifi_led).turn_off();
            id(out_eth_led).turn_off();
          }

##
## BUTTON
##

binary_sensor:
  - platform: gpio
    name: "Config Button"
    pin:
      number: ${vdet1_pin}
      mode: INPUT
      inverted: True
    on_press:
      - logger.log:
          level: INFO
          format: "Config pressed"
    on_release:
      - logger.log:
          level: INFO
          format: "Config released"

##
## SWITCHS
##

switch:
  - platform: gpio
    name: "RS485-1 Terminator"
    id: sw_term_rs485_1
    pin:
      tca9555: tca9555_hub
      number: ${tca_pin_rs485_1_terminator}
      mode: OUTPUT

  - platform: gpio
    name: "RS485-2 Terminator"
    id: sw_term_rs485_2
    pin:
      tca9555: tca9555_hub
      number: ${tca_pin_rs485_2_terminator}
      mode: OUTPUT

  - platform: gpio
    name: "RS485-1 Stretch"
    id: sw_stretch_rs485_1
    pin:
      tca9555: tca9555_hub
      number: ${tca_pin_rs485_1_stretch}
      mode: OUTPUT

  - platform: gpio
    name: "RS485-2 Stretch"
    id: sw_stretch_rs485_2
    pin:
      tca9555: tca9555_hub
      number: ${tca_pin_rs485_2_stretch}
      mode: OUTPUT

  - platform: gpio
    name: "RS485 Vout"
    id: sw_vout_rs485
    pin:
      tca9555: tca9555_hub
      number: ${tca_pin_vout}
      mode: OUTPUT

  - platform: gpio
    name: "MIO On"
    id: sw_mio_on
    pin:
      tca9555: tca9555_hub
      number: ${tca_pin_mio_on}
      mode: OUTPUT

##
## MODBUS
##

uart:
  - id: uart_1
    tx_pin: ${uart1_tx_pin}
    rx_pin: ${uart1_rx_pin}
    baud_rate: 9600
    parity: NONE
    stop_bits: 2
    rx_buffer_size: 256

  - id: uart_2
    tx_pin: ${uart2_tx_pin}
    rx_pin: ${uart2_rx_pin}
    baud_rate: 9600
    parity: NONE
    stop_bits: 2
    rx_buffer_size: 256

modbus:
  - id: modbus1
    uart_id: uart_1
    send_wait_time: 50ms
    flow_control_pin: ${uart1_rts_pin}

  - id: modbus2
    uart_id: uart_2
    send_wait_time: 50ms
    flow_control_pin: ${uart2_rts_pin}

modbus_controller:
  - id: mbus1
    address: 1
    modbus_id: modbus1
    setup_priority: 10
    update_interval: 800ms
    command_throttle: 100ms

  - id: mbus2
    address: 1
    modbus_id: modbus2
    setup_priority: 10
    update_interval: 800ms
    command_throttle: 100ms

sensor:
  - platform: modbus_controller
    modbus_controller_id: mbus1
    id: rs485_1_address_1_holding_110
    name: "RS485-1 Address 1 Holding 110"
    register_type: holding
    address: 110

  - platform: modbus_controller
    modbus_controller_id: mbus2
    id: rs485_2_address_1_holding_110
    name: "RS485-2 Address 1 Holding 110"
    register_type: holding
    address: 110
